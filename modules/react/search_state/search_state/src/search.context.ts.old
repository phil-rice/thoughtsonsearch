import {DatasourceNameToSearcher, DatasourceNameToSearchTypeClass} from "./search.typeclass.ts.old";
import {SearchParser} from "modules/react/react_search_parser/src/react/search.parser";
import {DebugContext} from "@enterprise_search/debug";
import {createContext} from "react";


export type SearchContext<Context extends SearchContext<Context, Filter>, Filter> = DebugContext & {
    tcs: DatasourceNameToSearchTypeClass<Context, any>
    searchers: DatasourceNameToSearcher<Context>
    searchParser: SearchParser<Filter>
}

export const searchContext = createContext<SearchContext<any, any> | undefined>(undefined)

export type SearchProviderProps<Context extends SearchContext<Context, Filter>, Filter> = {
    context: Context
    children: React.ReactNode
}
export function SearchProvider<Context extends SearchContext<Context, Filter>, Filter>({context, children}: SearchProviderProps<Context, Filter>){
    return <searchContext.Provider value={context}>{children}</searchContext.Provider>
}


